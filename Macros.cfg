#####################################################################
#  Macros
#####################################################################

[delayed_gcode start_controller_fans]
initial_duration: 1
gcode:
    SET_FAN_SPEED FAN=controller_fans SPEED=0.5

[gcode_macro G32]
gcode:
    G90
    G28
    Attach_Probe_Lock
    QUAD_GANTRY_LEVEL
    G0 Z25
    G28 Z
    CALIBRATE_Z
    Dock_Probe_Unlock

[gcode_macro PRINT_START]
gcode:
    {% set extruder_temp = params.EXTRUDER|default(200)|int %}
    {% set bed_temp = params.BED|default(60)|int %}

    {% set vars = printer["gcode_macro _User_Variables"] %}
    {% set klicky_dock_x = vars.docklocation_x %}
    {% set klicky_dock_y = vars.docklocation_y %}
    {% set klicky_attachmove_y = vars.attachmove_y|default(0) %}

    {% set th = printer.toolhead %}
    {% set x = th.axis_maximum.x - 20 %}
    {% set y = th.axis_maximum.y - 20 %}
    {% set z = 25 %}
    {% set feedrate = 12000 %}

    {% set need_quad_gantry_level = printer.quad_gantry_level.applied|lower == "false" %}
    {% set need_calibrate_z = printer.z_calibration.last_query|lower == "false" %}
    {% set use_klicky = need_quad_gantry_level or need_calibrate_z %}

    M140 S{bed_temp}
    M104 S{extruder_temp}

    G90
    {% if "xyz" not in printer.toolhead.homed_axes %}
        STATUS_HOMING
        G28
    {% endif %}

    G92 E0
    G1 E-1.0 F1500

    {% if use_klicky %}
        ATTACH_PROBE_LOCK
    {% endif %}

    {% if need_quad_gantry_level %}
        QUAD_GANTRY_LEVEL
        G0 Z25
        G28 Z
    {% endif %}

    {% if need_calibrate_z %}
        CALIBRATE_Z
    {% endif %}

    {% if use_klicky %}
        DOCK_PROBE_UNLOCK
    {% endif %}

    STATUS_HEATING
    M190 S{bed_temp}
    M109 S{extruder_temp}

    BED_MESH_PROFILE LOAD=default
    LINE_PURGE

    STATUS_PRINTING

[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x = th.axis_maximum.x - 20 %}
    {% set y = th.axis_maximum.y - 20 %}
    {% set z = [th.position.z + 5, th.axis_maximum.z]|min %}
    {% set feedrate = 12000 %}

    M400                                                                                          ; wait for buffer to clear

    G92 E0                                                                                        ; zero the extruder
    G1 E-5.0 F1500                                                                                ; retract filament
    G90                                                                                           ; absolute positioning
    G1 Z{z} F3000                                                                                 ; move nozzle up 2mm
    G0 X{x} Y{y} F{feedrate}                                                                      ; park nozzle at rear

    # TURN_OFF_HEATERS
    # M107                                                                                          ; turn off fan

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set z = params.Z|default(10)|int %}                                                        ; z hop amount
    {% set z_min = 30 %}
    {% set feedrate = 12000 %}

    {% if printer["pause_resume"].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                   ; set z hop variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                               ; save current print position for resume

        BASE_PAUSE                                                                                ; pause print

        {% if printer.gcode_move.position.z < z_min %}                                            ; set z hop a bit more if nozzle is close to bed
            G91
            G1 Z{z_min} F900
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z_min}
        {% elif (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}          ; check that zhop doesn't exceed z max
            G91                                                                                   ; relative positioning
            G1 Z{z} F900                                                                          ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                       ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}

        G90                                                                                       ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F{feedrate}  ; park toolhead at front center

        SAVE_GCODE_STATE NAME=PAUSEPARK                                                           ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)

        SET_IDLE_TIMEOUT TIMEOUT=43200                                                            ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
gcode:
    {% set e = params.E|default(5)|int %}                                                         ; hotend prime amount (in mm)

    {% if printer["pause_resume"].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}               ; set timeout back to configured value

        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                                  ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                                       ; relative positioning
        M83                                                                                       ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                             ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                                  ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}

        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=200                                      ; restore position
        BASE_RESUME                                                                               ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                   ; set timeout back to configured value
    CLEAR_PAUSE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro BED_CENTER]
gcode:
    G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F12000

[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state

    PAUSE
    G91
    G1 E-80 F1500

    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro LOAD_FILAMENT]
variable_load_distance: 50
variable_purge_distance: 25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings["extruder"].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance: 50
variable_purge_distance: 25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings["extruder"].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state
